def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new FileNotFoundException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"
apply plugin: 'com.google.gms.google-services'

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 33

    lintOptions {
    checkReleaseBuilds false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.softel.cmms"
        minSdkVersion 26
        targetSdkVersion 33
        multiDexEnabled true
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    signingConfigs {
       release {
            keyAlias 'keyCmms'
            keyPassword 'madhuban'
            storeFile file('../../release-key.jks')
            storePassword 'madhuban' 
       }
   }
   buildTypes {
       release {
           signingConfig signingConfigs.release
       }
   }

    flavorDimensions "app"
    productFlavors{

       prod{
            dimension "app"
            resValue "string","app_name","cmms"
            applicationIdSuffix ""
            minSdkVersion 26
            versionName "1.0.0"
            multiDexEnabled=true
           copy {
               from 'src/prod/'
               include '*.json'
               into '.'
           }
        }
        dev{
            dimension "app"
            resValue "string","app_name","cmms Dev"
            applicationIdSuffix ""
            minSdkVersion 26
            versionName "2.0.4"
            multiDexEnabled=true
            copy {
               from 'src/dev/'
               include '*.json'
               into '.'
           }
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation ('com.google.android.exoplayer:exoplayer:2.17.0')
    implementation 'androidx.appcompat:appcompat:1.5.1'
}

// apply plugin: 'com.google.firebase.crashlytics'
